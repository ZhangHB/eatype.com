<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <link href='/jekyll/_site/css/home.css' rel='stylesheet' type='text/css' />
<link href="/jekyll/_site/assets/themes/prettify/prettify.css" rel="stylesheet" type="text/css" media="all">
    <title>eatype.com</title>
</head>
<body>
<header class="layout phd">
    <h1>eatype.com</h1>
</header>

<div class="content layout">
    <div class="posts">
    
    <article class="article">
        <h1><a href="/jekyll/_site/2014/05/22/ProJS.html">Pro JavaSctipt!</a></h1>
        <time>22 May 2014</time>
        <h2>Pro JavaSctipt!</h2>

<p>22 May 2014</p>

<p>Pro Javascript OCR</p>


    </article>
    
    <article class="article">
        <h1><a href="/jekyll/_site/2010/10/16/Create-a-Pie-Chart-with-Illustrator.html">用Illustrator画饼图</a></h1>
        <time>16 Oct 2010</time>
        <h2>用Illustrator画饼图</h2>

<p><img src="http://pic.yupoo.com/tyo.my/AybwCaej/FTvi7.jpg" alt="Create a Pie Chart" /></p>


    </article>
    
    <article class="article">
        <h1><a href="/jekyll/_site/2010/05/09/PPK-Talk-JS-Note.html">读书笔记 PPK谈JS</a></h1>
        <time>09 May 2010</time>
        <h1>读书笔记 PPK谈JS</h1>

<h2>手工分离Bug:</h2>

<ol>
<li>在函数的第一行插入 <code>return</code>, 这个函数就被关闭了. 如果此时 <code>Bug</code> 消失了, 就能肯定 <code>Bug</code> 出现在这个函数里. 如果 <code>Bug</code> 还在, 就恢复这个函数然后关闭下一个, 直到 <code>Bug</code> 消失;</li>
<li>找到有 <code>Bug</code> 的函数后, 在第一段代码后边插入 <code>alert</code>. 再次测试后, 如果 <code>Bug</code> 出现了, 那问题就出现在 <code>alert</code> 之前的代码里, 如果 <code>Bug</code> 没有出现, 就把 <code>alert</code> 挪到下一个逻辑块之后, 直到 <code>Bug</code> 出现;</li>
<li>找到出 <code>Bug</code> 的逻辑块之后, 继续用 <code>alert</code> 进行搜索, 直到找到出问题的那一行;</li>
<li>在遍历结构中使用 <code>alert</code> 也许会产生一个问题, 如果遍历 100 次, 就会弹出 100 个 <code>alert</code>. 假如在第 22 个 <code>alert</code> 的时候发现了错误, 剩下的 <code>alert</code> 还是需要挨个点确定, 你可以用 <code>confirm</code> 代替 <code>alert</code> 来避免这个问题;</li>
</ol>


<p><a href="/jekyll/_site"></a></p>

<p><a href="#more">阅读全文 →</a></p>



    </article>
    
    <article class="article">
        <h1><a href="/jekyll/_site/2010/04/21/Windows7-and-PhotoshopCS.html">在Win7里继续使用PSCS</a></h1>
        <time>21 Apr 2010</time>
        <h2>在Win7里继续使用PSCS</h2>

<p>首先, 现在这年头儿, PS都CS5了, 为什么还要用CS呢? 其实打CS2开始, 我就开始不待见新版本的PS, 为什么呢? 因为常用的热键都按不出来了, 所以我到现在还在用CS.</p>

<p>在XP下到还好说, 到了Vista时代, PSCS开始出现兼容性的问题, 图层面板里的内容不能流畅的拖动(我记得当年Flash 8 在Vista里就有这毛病, 好在Flash升级的快), 甚至启动画面都不能正常显示(这个倒不重要, 而且也不是每台机器都有这个问题), 也正是因为如此我又从Vista换回来了XP.</p>

<p>Vista可以无视, 但Win7不能不用, 用了Win7又不能像以前那样流畅的使用PSCS. 唉~反正左右都不爽, 那只能退而求其次, 把桌面组合功能关掉就能正常的使用PSCS了.</p>

<p>关掉桌面组合后, Win7的透明效果没了, 变成了很难看的蓝色, 最主要的是这蓝色还没有地方可调整.</p>

<p>再继续想辄, 默认主题不好看, 那就用第三方主题1呗, 下载这个2, 先把系统文件替换掉! 以前XP时代替换一个文件就行, 现在在Win7里要替换三个. 重启系统就能用第三方主题了.</p>

<p>重启了之后又出现了新问题, Live Mesh又开始没事儿找事儿了(在替换了系统文件的XP里也有同样的毛病, 具体说就是在某些时候桌面上的窗口儿会自个儿慢慢儿地缩小, 对, 没错儿, 就是在那儿自己慢慢儿~慢慢儿的缩小, 直到缩成一个Titlebar), 唉, 再退一步吧, 反正还有Dropbox, 把Live Mesh卸载掉.</p>

<p>再重启, 嗯, 这回全都正常了.</p>

<hr />

<ul>
<li><a href="http://www.deviantart.com/customization/skins/windows7/visualstyle/">DeviantART</a>上有好多第三方主题;</li>
<li>这是个小工具, 用来替换三个系统文件, 而且不出意料的要用管理员身份来运行;</li>
</ul>



    </article>
    
    <article class="article">
        <h1><a href="/jekyll/_site/2010/01/01/hello-world.html">Hello, World!</a></h1>
        <time>01 Jan 2010</time>
        <h2>Hello, World!</h2>

<p>嗯嗯, eatype.com 在 <code>Jekyll</code> 上重生了~</p>

<hr />

<p>01 Jan 2010</p>


    </article>
    
</div class="posts">
</div>
<footer class="layout pft">
    © 2014 eatype.com. Powered by <a href="http://jekyllrb.com/">Jekyll</a>.
</footer>


<script type="text/javascript" src="/jekyll/_site/assets/themes/prettify/prettify.js"></script>
<script type="text/javascript" src="http://www.xinhuanet.com/static/jq.js"></script>
<script type="text/javascript">
    $(function() {
        $('pre').addClass('prettyprint linenums').attr('style', 'overflow:auto');
        prettyPrint();
    });
</script>
</body>
</html>